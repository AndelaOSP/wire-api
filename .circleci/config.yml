version: 2
machine:
  environment:
    # Add the Postgres 9.6 binaries to the path.
    PATH: /usr/lib/postgresql/9.6/bin/:$PATH

  pre:
    # Start Postgres 9.6.
    - sudo service postgresql start 9.6

    # Create a new test database.
    - sudo -u postgres psql -p 5432 -c "create database wire_dev_test;"

jobs:
  build:
    working_directory: ~/wire-api
    docker:
      - image: circleci/node:9.8.0
        environment:
          NODE_ENV: test
          PGUSER: root

      - image: circleci/postgres:9.6
        environment:
          POSTGRES_DB: wire_dev_test
          POSTGRES_USER: root
    steps:
      - checkout
      - run:
          name: Install packages
          command: cd src && npm install
      - run:
          name: Migrate and seed
          command: cd src && npm run migrate-seed
      - run:
          name: Setup Code Climate test-reporter
          command: |
            cd src && curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter;
            chmod +x ./cc-test-reporter
      - run:
          name: Notify Code Climate of current test
          command: cd src && ./cc-test-reporter before-build
      - run:
          name: Run tests
          command: cd src && npm test && ./cc-test-reporter format-coverage -t lcov 
      - run:
          name: Send coverage to Code Climate
          command: cd src && ./cc-test-reporter upload-coverage 
          when: always

  deploy:
    docker:
      - image: circleci/node:9.8.0
        environment:
          GOOGLE_PROJECT_ID: bench-projects
          GOOGLE_COMPUTE_ZONE: europe-west1-b
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and deploy application
          command: chmod +x scripts/deploy.sh && scripts/deploy.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only:
                - master
                - staging
